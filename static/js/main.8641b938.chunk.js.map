{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","name","email","className","href","TodoInfo","completedTodo","user","todo","title","id","completed","classNames","TodoList","todos","map","username","getUser","usersFromServer","find","userId","App","useState","stateTodos","setTodos","choosenUser","setChooseUser","newTitle","setNewTitle","isErrorTitle","setIsErrorTitle","isErrorUser","setIsErrorUser","currentId","reduce","max","action","method","onSubmit","event","preventDefault","trim","selectedUser","complitedTodo","newTodos","push","createTodo","type","value","placeholder","onChange","target","disabled","index","ReactDOM","render","document","getElementById"],"mappings":"4OAEaA,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACtC,mBAAGC,UAAU,WAAWC,KAAMF,EAA9B,SACGD,KCIQI,EAA4B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAClCC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACNC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,GAAIC,EAAcH,EAAdG,UAEnB,OACE,0BACE,UAASD,EACTP,UAAWS,IACT,WACA,CACE,sBAAuBD,IAL7B,UASE,oBAAIR,UAAU,kBAAd,SACGM,IAEFF,GAAQ,cAAC,EAAD,eAAcA,QClBhBM,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,yBAASX,UAAU,WAAnB,SACGW,EAAMC,KAAI,SAACT,GACV,IAAQE,EAASF,EAATE,KAER,OACE,cAAC,EAAD,CAEEF,cAAeA,GADVE,EAAKE,UCfP,GACb,CACEA,GAAI,EACJT,KAAM,gBACNe,SAAU,OACVd,MAAO,qBAET,CACEQ,GAAI,EACJT,KAAM,eACNe,SAAU,YACVd,MAAO,qBAET,CACEQ,GAAI,EACJT,KAAM,mBACNe,SAAU,WACVd,MAAO,sBAET,CACEQ,GAAI,EACJT,KAAM,mBACNe,SAAU,WACVd,MAAO,6BAET,CACEQ,GAAI,EACJT,KAAM,mBACNe,SAAU,SACVd,MAAO,4BAET,CACEQ,GAAI,EACJT,KAAM,uBACNe,SAAU,mBACVd,MAAO,2BAET,CACEQ,GAAI,EACJT,KAAM,kBACNe,SAAU,eACVd,MAAO,0BAET,CACEQ,GAAI,EACJT,KAAM,2BACNe,SAAU,gBACVd,MAAO,wBAET,CACEQ,GAAI,EACJT,KAAM,kBACNe,SAAU,WACVd,MAAO,2BAET,CACEQ,GAAI,GACJT,KAAM,qBACNe,SAAU,iBACVd,MAAO,2BCpDLe,EAAU,SAACT,GACf,OAAOU,EAAgBC,MAAK,SAAAZ,GAAI,OAAIA,EAAKG,KAAOF,EAAKY,WAGjDN,ECXS,CACb,CACEJ,GAAI,EACJD,MAAO,qBACPE,WAAW,EACXS,OAAQ,GAEV,CACEV,GAAI,GACJD,MAAO,kBACPE,WAAW,EACXS,OAAQ,GAEV,CACEV,GAAI,EACJD,MAAO,qCACPE,WAAW,EACXS,OAAQ,IDNmCL,KAAI,SAAAP,GAAI,MAAK,CAC1DA,OACAD,KAAMU,EAAQT,OAGHa,EAAM,WACjB,MAA+BC,mBAASR,GAAxC,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAqCF,mBAAS,SAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACIC,EAAYV,EACbW,QAAO,SAACC,EAAD,OAAQ3B,EAAR,EAAQA,KAAR,OAA4B2B,EAAM3B,EAAKE,GAAKF,EAAKE,GAAKyB,IAAM,GAwDtE,OACE,sBAAKhC,UAAU,MAAf,UACE,+CAEA,uBACEiC,OAAO,aACPC,OAAO,OACPC,SAhBe,SAACC,GAnBN,IAAC9B,EAAeF,GAoB9BgC,EAAMC,iBApBwBjC,EAqBRkB,EApBtBK,IADerB,EAqBHkB,GApBWc,QACvBT,EAAwB,UAATzB,GAEC,UAATA,GAAqBE,EAAMgC,SA9BjB,SAAChC,GAClBwB,GAAa,EAEb,IAAMS,EAAexB,GAAiBO,GAShCkB,EAAgB,CACpBnC,KARc,CACdC,QACAW,OAAQsB,EAAahC,GACrBA,GAAIuB,EACJtB,WAAW,GAKXJ,KAAMmC,GAGFE,EAAQ,YAAOrB,GAErBqB,EAASC,KAAKF,GAEdnB,EAASoB,GACTlB,EAAc,SACdE,EAAY,IA4BZkB,CAAWnB,IAOT,UAKE,qBAAKxB,UAAU,QAAf,SACE,kCACE,2CACA,uBACEF,KAAK,QACL8C,KAAK,OACL,UAAQ,aACRC,MAAOrB,EACPsB,YAAY,gBACZC,SAvCgB,SAACX,GAC3B,IAAQS,EAAUT,EAAMY,OAAhBH,MAERpB,EAAYoB,MAsCHnB,GACC,sBAAM1B,UAAU,QAAhB,uCAKN,qBAAKA,UAAU,QAAf,SACE,kCACE,0CACA,yBACEF,KAAK,OACL,UAAQ,aACR+C,MAAOvB,EACPyB,SAhDe,SAACX,GAC1B,IAAQS,EAAUT,EAAMY,OAAhBH,MAERtB,EAAcsB,IAyCN,UAME,wBAAQA,MAAM,QAAQI,UAAQ,EAA9B,2BAEClC,EAAgBH,KAAI,SAACR,EAAM8C,GAAP,OACnB,wBAAQL,MAAOK,EAAf,SAAuB9C,EAAKN,aAG/B8B,GACC,sBAAM5B,UAAU,QAAhB,uCAKN,wBACE4C,KAAK,SACL,UAAQ,eAFV,oBAQF,cAAC,EAAD,CAAUjC,MAAOS,QEnIvB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8641b938.chunk.js","sourcesContent":["import { User } from '../../type';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { CompletedTodo } from '../../type';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  completedTodo: CompletedTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ completedTodo }) => {\n  const { user, todo } = completedTodo;\n  const { title, id, completed } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo {...user} />}\n    </article>\n  );\n};\n","import { CompletedTodo } from '../../type';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Prop = {\n  todos: CompletedTodo[]\n};\n\nexport const TodoList: React.FC<Prop> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((completedTodo: CompletedTodo) => {\n        const { todo } = completedTodo;\n\n        return (\n          <TodoInfo\n            key={todo.id}\n            completedTodo={completedTodo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { CompletedTodo, HandleEvent, TypeTodo } from './type';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (todo: TypeTodo) => {\n  return usersFromServer.find(user => user.id === todo.userId);\n};\n\nconst todos: CompletedTodo[] = todosFromServer.map(todo => ({\n  todo,\n  user: getUser(todo),\n}));\n\nexport const App = () => {\n  const [stateTodos, setTodos] = useState(todos);\n  const [choosenUser, setChooseUser] = useState('empty');\n  const [newTitle, setNewTitle] = useState('');\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  let currentId = stateTodos\n    .reduce((max, { todo }): number => (max < todo.id ? todo.id : max), 0);\n\n  const createTodo = (title: string) => {\n    currentId += 1;\n\n    const selectedUser = usersFromServer[+choosenUser];\n\n    const newTodo = {\n      title,\n      userId: selectedUser.id,\n      id: currentId,\n      completed: false,\n    };\n\n    const complitedTodo = {\n      todo: newTodo,\n      user: selectedUser,\n    };\n\n    const newTodos = [...stateTodos];\n\n    newTodos.push(complitedTodo);\n\n    setTodos(newTodos);\n    setChooseUser('empty');\n    setNewTitle('');\n  };\n\n  const isEmpty = (title: string, user: string): boolean => {\n    setIsErrorTitle(!title.trim());\n    setIsErrorUser(user === 'empty');\n\n    return user === 'empty' || !title.trim();\n  };\n\n  const onHandleChangeTitle = (event: HandleEvent) => {\n    const { value } = event.target;\n\n    setNewTitle(value);\n  };\n\n  const onHandleChangeUser = (event: HandleEvent) => {\n    const { value } = event.target;\n\n    setChooseUser(value);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (isEmpty(newTitle, choosenUser)) {\n      return;\n    }\n\n    createTodo(newTitle);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              name=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTitle}\n              placeholder=\"Enter a title\"\n              onChange={onHandleChangeTitle}\n            />\n            {isErrorTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={choosenUser}\n              onChange={onHandleChangeUser}\n            >\n              <option value=\"empty\" disabled>Choose a user</option>\n\n              {usersFromServer.map((user, index) => (\n                <option value={index}>{user.name}</option>\n              ))}\n            </select>\n            {isErrorUser && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={stateTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}