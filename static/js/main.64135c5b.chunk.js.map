{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","name","email","className","href","TodoInfo","todo","user","title","id","completed","classNames","TodoList","todos","map","completedTodo","username","userId","getUser","usersFromServer","find","todosFromServer","maxIndex","reduce","max","App","useState","stateTodos","setTodos","chooseUser","setChooseUser","newTitle","setNewTitle","isErrorTitle","setIsErrorTitle","isErrorUser","setIsErrorUser","Todo","currentId","createTodo","addTodo","trim","length","selectUser","complitedTodo","newTodos","unshift","onHandleChange","event","target","value","action","method","onSubmit","preventDefault","handleSubmit","type","placeholder","onChange","disabled","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64135c5b.chunk.js","sourcesContent":["import { User } from '../../type';\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { CompletedTodo } from '../../type';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<CompletedTodo> = ({ todo, user }) => {\n  const { title, id, completed } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo {...user} />}\n    </article>\n  );\n};\n","import { CompletedTodo } from '../../type';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Prop = {\n  todos: CompletedTodo[]\n};\n\nexport const TodoList: React.FC<Prop> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((completedTodo: CompletedTodo) => {\n        return (\n          <>\n            <TodoInfo\n              key={completedTodo.todo.id}\n              {...completedTodo}\n            />\n          </>\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { CompletedTodo, HandleEvent, TypeTodo } from './type';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (todo: TypeTodo) => {\n  return usersFromServer.find(user => user.id === todo.userId);\n};\n\nconst todos: CompletedTodo[] = todosFromServer.map(todo => ({\n  todo,\n  user: getUser(todo),\n}));\n\nconst maxIndex = todosFromServer\n  .reduce((max, todo): number => (max < todo.id ? todo.id : max), 0);\n\nconst createTodo = () => {\n  let currentId = maxIndex;\n\n  const Todo = (title: string, userId: number): TypeTodo => {\n    currentId += 1;\n\n    return {\n      title,\n      userId,\n      id: currentId,\n      completed: false,\n    };\n  };\n\n  return Todo;\n};\n\nexport const App = () => {\n  const [stateTodos, setTodos] = useState(todos);\n  const [chooseUser, setChooseUser] = useState('empty');\n  const [newTitle, setNewTitle] = useState('');\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const Todo = createTodo();\n\n  const isEmpty = (title: string, user: string): boolean => {\n    setIsErrorTitle(!title.trim().length);\n    setIsErrorUser(user === 'empty');\n\n    return isErrorTitle || isErrorUser;\n  };\n\n  const addTodo = () => {\n    if (isEmpty(newTitle, chooseUser)) {\n      return;\n    }\n\n    const selectUser = usersFromServer[+chooseUser];\n    const newTodo = Todo(newTitle, selectUser.id);\n\n    const complitedTodo = {\n      todo: newTodo,\n      user: selectUser,\n    };\n\n    const newTodos = [...stateTodos];\n\n    newTodos.unshift(complitedTodo);\n\n    setTodos(newTodos);\n    setChooseUser('empty');\n    setNewTitle('');\n  };\n\n  const onHandleChange = (event: HandleEvent) => {\n    const { value, name } = event.target;\n\n    if (name === 'title') {\n      if (value.length < 2) {\n        setNewTitle(value.trim());\n\n        return;\n      }\n\n      setNewTitle(value);\n\n      return;\n    }\n\n    setChooseUser(value);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newTitle}\n            placeholder=\"Enter a title\"\n            onChange={(event) => onHandleChange(event)}\n          />\n          {isErrorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"user\"\n            data-cy=\"userSelect\"\n            value={chooseUser}\n            onChange={(event) => onHandleChange(event)}\n          >\n            <option value=\"empty\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user, index) => (\n              <option value={index}>{user.name}</option>\n            ))}\n          </select>\n          {isErrorUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={stateTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}